{
	"info": {
		"_postman_id": "97f6ec86-d660-41a3-ad00-542070820de5",
		"name": "AParcial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23562709"
	},
	"item": [
		{
			"name": "Album",
			"item": [
				{
					"name": "Post Album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"album_id\",data.id);\r",
									"\r",
									"\r",
									"pm.test('Status is 201',function(){\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fechaInicio\": \"2023-12-01T08:00:00Z\",\r\n  \"fechaFin\": \"2023-12-03T17:00:00Z\",\r\n  \"titulo\": \"Evento importante\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": [
						{
							"name": "Post Album",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fechaInicio\": \"2023-12-01T08:00:00Z\",\r\n  \"fechaFin\": \"2023-12-03T17:00:00Z\",\r\n  \"titulo\": \"Evento importante\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/album",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Post Album Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"titulo should not be empty\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fechaInicio\": \"2023-12-01T08:00:00Z\",\r\n  \"fechaFin\": \"2023-12-03T17:00:00Z\",\r\n  \"titulo\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": [
						{
							"name": "Post Album Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fechaInicio\": \"2023-12-01T08:00:00Z\",\r\n  \"fechaFin\": \"2023-12-03T17:00:00Z\",\r\n  \"titulo\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/album",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/{{album_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"{{album_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Album",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/{{album_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"{{album_id}}"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Album Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The album with the given id was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get Album Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Add Photo Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The album with the given id was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add Photo Error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Add Photo Error Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The album with the given id was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add Photo Error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 204\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/{{album_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"{{album_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Album",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/{{album_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"{{album_id}}"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Album Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The album with the given id was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete Album Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/album/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"album",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Usuario",
			"item": [
				{
					"name": "Post Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"usuario_id\",data.id);\r",
									"\r",
									"\r",
									"pm.test('Status is 201',function(){\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"telefono\": \"1234567890\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuario",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuario"
							]
						}
					},
					"response": [
						{
							"name": "Post Usuario",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"telefono\": \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuario",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuario"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Post Usuario Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The usuario telefono is not correct\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"telefono\": \"123456780\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuario",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuario"
							]
						}
					},
					"response": [
						{
							"name": "Post Usuario Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"telefono\": \"123456780\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuario",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuario"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuario",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuario"
							]
						}
					},
					"response": [
						{
							"name": "Get usuarios",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuario",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuario"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get usuarios error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"El producto con id 00000000-0000-0000-0000-000000000000 no existe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuario/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuario",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get usuarios error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuario/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuario",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Foto",
			"item": [
				{
					"name": "Post Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"foto_id\",data.id);\r",
									"\r",
									"\r",
									"pm.test('Status is 201',function(){\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iso\": 123,\r\n  \"valObturacion\": 100,\r\n  \"apertura\": 20,\r\n  \"fecha\": \"2023-12-03T12:34:56.789Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/foto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto"
							]
						}
					},
					"response": [
						{
							"name": "Post Photo",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"iso\": 123,\r\n  \"valObturacion\": 100,\r\n  \"apertura\": 20,\r\n  \"fecha\": \"2023-12-03T12:34:56.789Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/foto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Post Photo Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The foto apertura is wrong\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iso\": 123,\r\n  \"valObturacion\": 100,\r\n  \"apertura\": 1010,\r\n  \"fecha\": \"2023-12-03T12:34:56.789Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/foto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto"
							]
						}
					},
					"response": [
						{
							"name": "Post Photo Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"iso\": 123,\r\n  \"valObturacion\": 100,\r\n  \"apertura\": 1010,\r\n  \"fecha\": \"2023-12-03T12:34:56.789Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/foto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get All Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto"
							]
						}
					},
					"response": [
						{
							"name": "Get All Photo",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/foto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foto/{{foto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto",
								"{{foto_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Photo",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/foto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Photo Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The foto apertura is wrong\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foto/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get Photo Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/foto/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Photo Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The foto apertura is wrong\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foto/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete Photo Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/foto/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 204\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foto/{{foto_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foto",
								"{{foto_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Photo",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/foto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"foto"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Redsocial",
			"item": [
				{
					"name": "Post Redsocial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 201',function(){\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"slogan\": \"Slogan de ejemplooooooooo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/redsocial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redsocial"
							]
						}
					},
					"response": [
						{
							"name": "Post Redsocial",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"slogan\": \"Slogan de ejemplooooooooo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/redsocial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redsocial"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Post Redsocial Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message should equal to expected\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"The redsocial slogan is to small\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"slogan\": \"Slogan de \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/redsocial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redsocial"
							]
						}
					},
					"response": [
						{
							"name": "Post Redsocial Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nombre\": \"Nombre de ejemplo\",\r\n  \"slogan\": \"Slogan de \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/redsocial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redsocial"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		}
	]
}